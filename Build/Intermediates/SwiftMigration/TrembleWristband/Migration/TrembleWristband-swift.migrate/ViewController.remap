[
 {
  "file": "/Users/minami/cojt/TrembleWristband/TrembleWristband/ViewController.swift",
  "offset": 654,
  "remove": 3853,
  "text": ") {\n        print(\"state \\(central.state)\");\n        \n        switch (central.state) {\n        case .PoweredOff:\n            print(\"Bluetooth Powered Off\")\n        case .PoweredOn:\n            print(\"Bluetooth Powered On\")\n        default:\n            break\n        }\n    }\n    \n    func centralManager(central: CBCentralManager, didDiscoverPeripheral peripheral: CBPeripheral, advertisementData: [String : AnyObject],\n        RSSI: NSNumber)\n    {\n        print(\"BLE_Device:\\(peripheral)\")\n        \n        if peripheral.name != nil && peripheral.name.hasPrefix(\"EdisonKun\") {\n            self.peripheral = peripheral\n            self.centralManager.connectPeripheral(self.peripheral, options: nil)\n        }\n    }\n    \n    func centralManager(central: CBCentralManager, didConnectPeripheral peripheral: CBPeripheral)\n    {\n        print(\"Connected\")\n        peripheral.delegate = self\n        peripheral.discoverServices(nil)\n    }\n    \n    func centralManager(central: CBCentralManager, didFailToConnectPeripheral peripheral: CBPeripheral, error: NSError?)\n    {\n        print(\"Connect error...\")\n    }\n    \n    func centralManager(central: CBCentralManager,\n        didDisconnectPeripheral peripheral: CBPeripheral,\n        error: NSError?)\n    {\n        print(\"Disconnect!\")\n        self.centralManager.cancelPeripheralConnection(self.peripheral)\n        self.peripheral = nil\n        self.servoControlPoint = nil\n        self.view.backgroundColor = UIColor(red:0.00, green:0.44, blue:0.77, alpha:1)\n    }\n    \n    func peripheral(peripheral: CBPeripheral, didDiscoverServices error: NSError?) {\n        if error != nil {\n            print(\"error: \\(error)\")\n            return\n        }\n        let services: NSArray = peripheral.services\n        print(\"\\(services) ServicesCount: \\(services.count)\")\n        for obj in services {\n            if let service = obj as? CBService {\n                peripheral.discoverCharacteristics(nil, forService: service)\n            }\n        }\n    }\n    \n    func peripheral(peripheral: CBPeripheral, didDiscoverCharacteristicsForService service: CBService,\n        error: NSError?)\n    {\n        if error != nil {\n            print(\"error: \\(error)\")\n            return\n        }\n        print(\"EdisonkunP: \\(service.UUID)\");\n        \n        let characteristics: NSArray = service.characteristics\n        print(\"\\(characteristics) CharacteristicsCount: \\(characteristics.count)\")\n        for obj in characteristics {\n            if let characteristic = obj as? CBCharacteristic {\n                if characteristic.UUID.isEqual(CBUUID(string: \"00003333-0000-1000-8000-00805F9B34FB\")) {\n                    self.servoControlPoint = characteristic\n                    print(\"Found sensor\")\n                    self.view.backgroundColor = UIColor(red:0.12,green:0.60,blue:1.00,alpha:1.0)\n                }\n            }\n        }\n    }\n    \n    func peripheral(peripheral: CBPeripheral, didWriteValueForCharacteristic characteristic: CBCharacteristic, error: NSError?) {\n        var data = characteristic.value\n        print(\"write!:%@\",data.description);\n        var dataString = (data.description as NSString).substringWithRange(NSRange(location: 1, length: data.description-2))\n        println(\"write!:%@\",dataString);\n    }\n    \n    \n    \n    func peripheral(peripheral: CBPeripheral, didUpdateValueForCharacteristic characteristic: CBCharacteristic, error: NSError?) {\n        print(\"update!:%@\",peripheral);\n    }\n\n    func peripheral(peripheral: CBPeripheral, didUpdateNotificationStateForCharacteristic characteristic: CBCharacteristic, error: NSError?) {\n        if error != nil {\n            print(\"Notify状態更新失敗...error: \\(error)\", terminator: \"\")\n        } else {\n            print(\"Notify状態更新成功！ isNotifying: \\(characteristic.isNotifying)\", terminator: \"",
 }
]
